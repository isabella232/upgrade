datasource db {
  provider = "postgresql"
  url      = "postgres://root@localhost:5432/prisma"
}

model Home {
  createdAt DateTime
  id        Int      @default(autoincrement()) @id
  updatedAt DateTime
  User      User[]
}

model IdentificationDocument {
  documentNumber String
  expiresOn      DateTime
  id             String   @id
  issuedOn       DateTime
  User           User[]
}

model Tagline {
  createdAt          DateTime
  description        String?
  excerpt            String
  id                 String               @id
  updatedAt          DateTime
  Tagline_visibility Tagline_visibility[]
  User               User[]
}

model Tagline_visibility {
  nodeId   String
  position Int
  value    String
  Tagline  Tagline @relation(fields: [nodeId], references: [id])

  @@id([nodeId, position])
}

model TaxDocument {
  documentNumber String
  expiresOn      DateTime
  id             String    @id
  issuedOn       DateTime
  lastChangedOn  DateTime?
  User           User[]
}

model Thought {
  baseIdea        String?
  createdAt       DateTime
  id              String            @id
  updatedAt       DateTime
  Thought_content Thought_content[]
  User            User[]            @relation(references: [id])
}

model Thought_content {
  nodeId   String
  position Int
  value    String
  Thought  Thought @relation(fields: [nodeId], references: [id])

  @@id([nodeId, position])
}

model User {
  age                              Int
  bestFriend                       String?
  createdAt                        DateTime
  email                            String                  @unique
  friendlyName                     String?
  godFather                        String?
  home                             Int?
  id                               String                  @id
  identificationDocument           String?
  isActive                         Boolean
  meta                             String?
  tagline                          String?
  taxDocument                      String?
  temperature                      Float?
  type                             String
  updatedAt                        DateTime
  User_UserToUser_bestFriend       User?                   @relation("UserToUser_bestFriend", fields: [bestFriend], references: [id])
  User_UserToUser_godFather        User?                   @relation("UserToUser_godFather", fields: [godFather], references: [id])
  Home                             Home?                   @relation(fields: [home], references: [id])
  IdentificationDocument           IdentificationDocument? @relation(fields: [identificationDocument], references: [id])
  Tagline                          Tagline?                @relation(fields: [tagline], references: [id])
  TaxDocument                      TaxDocument?            @relation(fields: [taxDocument], references: [id])
  other_User_UserToUser_bestFriend User[]                  @relation("UserToUser_bestFriend")
  other_User_UserToUser_godFather  User[]                  @relation("UserToUser_godFather")
  Thought                          Thought[]               @relation(references: [id])
  User_A                           User[]                  @relation("UserFriends", references: [id])
  User_B                           User[]                  @relation("UserFriends", references: [id])
  Work                             Work[]                  @relation(references: [id])
}

model Work {
  createdAt   DateTime
  description String?
  id          String   @id
  title       String?
  updatedAt   DateTime
  User        User[]   @relation(references: [id])
}