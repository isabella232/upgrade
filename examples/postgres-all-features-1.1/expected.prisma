model Home {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
}

model IdentificationDocument {
  id             String   @default(cuid()) @id
  documentNumber String
  issuedOn       DateTime
  expiresOn      DateTime
  user           User
}

model Tagline {
  id          String              @default(cuid()) @id
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  description String?
  excerpt     String
  visibility  TaglineVisibility[] @map("visibility")
  User        User[]
}

model TaxDocument {
  id             String    @default(cuid()) @id
  documentNumber String
  issuedOn       DateTime
  expiresOn      DateTime
  lastChangedOn  DateTime? @updatedAt
  user           User
}

model Thought {
  id        String   @default(cuid()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  baseIdea  String?
  content   String[]
  User      User[]   @relation(references: [id])
}

model User {
  id                       String                 @default(cuid()) @id
  createdAt                DateTime               @default(now())
  updatedAt                DateTime               @updatedAt
  email                    String                 @unique
  age                      Int
  type                     UserType               @map("type")
  isActive                 Boolean                @default(false)
  temperature              Float?
  meta                     Json?
  nickName                 String?                @map("friendlyName")
  godFatherId              String?                @map("godFather")
  homeId                   Int?                   @map("home")
  taxDocumentId            String?                @map("taxDocument") @unique
  identificationDocumentId String?                @map("identificationDocument") @unique
  bestFriendId             String?                @map("bestFriend")
  taglineId                String?                @map("tagline")
  friendsId                User?                  @map("friends") @relation("UserToUser_bestFriend", fields: [bestFriend], references: [id])
  friendsId                User?                  @map("friends") @relation("UserToUser_godFather", fields: [godFather], references: [id])
  home                     Home?                  @relation(fields: [home], references: [id])
  identificationDocument   IdentificationDocument @relation(fields: [identificationDocument], references: [id])
  tagline                  Tagline?               @relation(fields: [tagline], references: [id])
  taxDocument              TaxDocument?           @relation(fields: [taxDocument], references: [id])
  friendsId                User[]                 @map("friends") @relation("UserToUser_bestFriend")
  friendsId                User[]                 @map("friends") @relation("UserToUser_godFather")
  thoughts                 Thought[]              @relation(references: [id])
  friendsId                User[]                 @map("friends") @relation("UserFriends", references: [id])
  friends                  User[]                 @relation("UserFriends", references: [id])
  work                     Work[]                 @relation(references: [id])
}

model Work {
  id          String   @default(cuid()) @id
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String?
  description String?
  User        User[]   @relation(references: [id])
}

enum TaglineVisibility {
  HOME
  MOBILE_HOME
  MOBILE_PROFILE
  MOBILE_SETTINGS
  PROFILE
  SETTINGS
}

enum UserType {
  AWESOME
  NORMAL
}